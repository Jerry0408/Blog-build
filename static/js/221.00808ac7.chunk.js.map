{"version":3,"file":"static/js/221.00808ac7.chunk.js","mappings":"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","sources":["pages/Article/index.js","store/channel.Store.js","store/login.Store.js","store/user.Store.js","store/index.js"],"sourcesContent":["import { Link, useNavigate } from 'react-router-dom'\r\nimport { Card, Breadcrumb, Form, Button, Radio, DatePicker, Select, Popconfirm } from 'antd'\r\nimport { Table, Tag, Space } from 'antd'\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons'\r\n\r\nimport img404 from '../../assets/error.png'\r\nimport './index.scss'\r\nimport { useEffect, useState } from 'react'\r\nimport { http } from '../../utils'\r\nimport { useStore } from '../../store'\r\nimport { observer } from 'mobx-react-lite'\r\n\r\nconst { Option } = Select\r\nconst { RangePicker } = DatePicker\r\n\r\n\r\n\r\nconst Article = () => {\r\n  const navigate = useNavigate()\r\n  const { channelStore } = useStore()\r\n\r\n  const [articles, setArticles] = useState({\r\n    list: [],\r\n    count: 0\r\n  })\r\n  const [params, setParams] = useState({\r\n    page: 1,\r\n    per_page: 10\r\n  })\r\n\r\n  const onSearch = (values) => {\r\n    const { status, channel_id, date } = values\r\n    const _params = {}\r\n    _params.status = status\r\n    if (channel_id) {\r\n      _params.channel_id = channel_id\r\n    }\r\n    if (date) {\r\n      _params.begin_pubdate = date[0].format('YYYY-MM-DD')\r\n      _params.end_pubdate = date[1].format('YYYY-MM-DD')\r\n    }\r\n    setParams({\r\n      ...params,\r\n      ..._params\r\n    })\r\n  }\r\n\r\n  const pageChange = (cur_page) => {\r\n    setParams({\r\n      ...params,\r\n      page: cur_page\r\n    })\r\n  }\r\n\r\n  const delArticle = async (data) => {\r\n    await http.delete(`/mp/articles/${data.id}`)\r\n    const temp = { ...params }\r\n    setParams(temp)\r\n  }\r\n\r\n  const goPublish = (data) => {\r\n    navigate(`/layout/publish?id=${data.id}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadArticles = async () => {\r\n      const res = await http.get('/mp/articles', { params })\r\n      const { results, total_count } = res.data.data\r\n      console.log(results, total_count)\r\n      if (total_count !== 0 && results.length === 0) {\r\n        console.log(1111111)\r\n        setParams({ ...params, page: params.page - 1 })\r\n        return\r\n      }\r\n      console.log(res)\r\n      setArticles({\r\n        list: results,\r\n        count: total_count\r\n      })\r\n    }\r\n    loadArticles()\r\n  }, [params])\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: '封面',\r\n      dataIndex: 'cover',\r\n      width: 120,\r\n      render: cover => {\r\n        return <img src={cover.images[0] || img404} width={200} height={150} alt=\"\" />\r\n      }\r\n    },\r\n    {\r\n      title: '标题',\r\n      dataIndex: 'title',\r\n      width: 220\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      render: data => <Tag color=\"green\">审核通过</Tag>\r\n    },\r\n    {\r\n      title: '发布时间',\r\n      dataIndex: 'pubdate'\r\n    },\r\n    {\r\n      title: '阅读数',\r\n      dataIndex: 'read_count'\r\n    },\r\n    {\r\n      title: '评论数',\r\n      dataIndex: 'comment_count'\r\n    },\r\n    {\r\n      title: '点赞数',\r\n      dataIndex: 'like_count'\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: data => {\r\n        return (\r\n          <Space size=\"middle\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"circle\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => goPublish(data)}\r\n            />\r\n            <Popconfirm\r\n              title=\"Confirm to delete?\"\r\n              onConfirm={() => delArticle(data)}\r\n              okText=\"Confirm\"\r\n              cancelText=\"Cancel\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                shape=\"circle\"\r\n                icon={<DeleteOutlined />}\r\n              />\r\n            </Popconfirm>\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        title={\r\n          <Breadcrumb separator=\">\">\r\n            <Breadcrumb.Item>\r\n              <Link to=\"/layout/home\">首页</Link>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>内容管理</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        }\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        <Form\r\n          initialValues={{\r\n            status: -1,\r\n          }}\r\n          onFinish={onSearch}\r\n        >\r\n          <Form.Item label=\"状态\" name=\"status\">\r\n            <Radio.Group>\r\n              <Radio value={-1}>全部</Radio>\r\n              <Radio value={0}>草稿</Radio>\r\n              <Radio value={1}>待审核</Radio>\r\n              <Radio value={2}>审核通过</Radio>\r\n              <Radio value={3}>审核失败</Radio>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"频道\" name=\"channel_id\">\r\n            <Select\r\n              placeholder=\"请选择文章频道\"\r\n              style={{ width: 120 }}\r\n            >\r\n              {channelStore.channelList.map(channel => (\r\n                <Option value={channel.id} key={channel.id}>{channel.name}</Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"日期\" name=\"date\">\r\n            {/* 传入locale属性 控制中文显示*/}\r\n            <RangePicker></RangePicker>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: 80 }}>\r\n              筛选\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n      <Card title={`根据筛选条件共查询到 ${articles.count} 条结果：`}>\r\n        <Table\r\n          rowKey=\"id\"\r\n          columns={columns}\r\n          dataSource={articles.list}\r\n          pagination={{\r\n            pageSize: params.per_page,\r\n            total: articles.count,\r\n            onChange: pageChange\r\n          }}\r\n        />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default observer(Article)","import { makeAutoObservable } from \"mobx\"\r\nimport { http } from \"../utils\"\r\n\r\nclass ChannelStore {\r\n  channelList = []\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  loadChannelList = async () => {\r\n    const res = await http.get('/channels')\r\n    this.channelList = res.data.data.channels\r\n  }\r\n\r\n}\r\n\r\nexport default ChannelStore","// 登录模块\r\nimport { makeAutoObservable } from \"mobx\"\r\nimport { http, setToken, getToken, removeToken } from '../utils'\r\n\r\nclass LoginStore {\r\n  token = getToken() || ''\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n  // 登录\r\n  getToken = async ({ mobile, code }) => {\r\n\r\n    const res = await http.post('http://geek.itheima.net/v1_0/authorizations', {\r\n      mobile,\r\n      code\r\n    })\r\n    this.token = res.data.data.token\r\n    setToken(this.token)\r\n  }\r\n  clearToken = () => {\r\n    this.token = ''\r\n    removeToken()\r\n  }\r\n}\r\nexport default LoginStore","import { makeAutoObservable, runInAction } from \"mobx\"\r\nimport { http } from \"../utils\"\r\n\r\nclass UserStore {\r\n  userInfo = {}\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n  getUserInfo = async () => {\r\n    const res = await http.get('/user/profile')\r\n    runInAction(() => {\r\n      this.userInfo = res.data.data\r\n    })\r\n  }\r\n}\r\n\r\nexport default UserStore","import React from \"react\"\r\nimport ChannelStore from \"./channel.Store\"\r\nimport LoginStore from './login.Store'\r\nimport UserStore from \"./user.Store\"\r\nclass RootStore {\r\n  // 组合模块\r\n  constructor() {\r\n    this.loginStore = new LoginStore()\r\n    this.userStore = new UserStore()\r\n    this.channelStore = new ChannelStore()\r\n  }\r\n}\r\n// 导入useStore方法供组件使用数据\r\nconst StoresContext = React.createContext(new RootStore())\r\nexport const useStore = () => React.useContext(StoresContext)"],"names":["Option","Select","RangePicker","DatePicker","observer","navigate","useNavigate","channelStore","useStore","useState","list","count","articles","setArticles","page","per_page","params","setParams","delArticle","data","http","id","temp","useEffect","loadArticles","res","results","total_count","console","log","length","columns","title","dataIndex","width","render","cover","src","images","height","alt","color","size","type","shape","icon","EditOutlined","onClick","goPublish","onConfirm","okText","cancelText","danger","DeleteOutlined","separator","to","style","marginBottom","initialValues","status","onFinish","values","channel_id","date","_params","begin_pubdate","format","end_pubdate","label","name","value","placeholder","channelList","map","channel","htmlType","marginLeft","rowKey","dataSource","pagination","pageSize","total","onChange","cur_page","loadChannelList","channels","makeAutoObservable","this","LoginStore","token","getToken","mobile","code","setToken","clearToken","removeToken","userInfo","getUserInfo","runInAction","RootStore","loginStore","userStore","UserStore","ChannelStore","StoresContext","React"],"sourceRoot":""}